/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
      jcenter()
     maven { url 'https://plugins.gradle.org/m2' }
}
configurations {
    agent
}
dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'
    agent "org.aspectj:aspectjweaver:1.8.6"

    compile "ru.yandex.qatools.allure:allure-testng-adaptor:1.5.4"
    compile group: 'io.qameta.allure', name: 'allure-gradle', version: '2.5'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
	compile group: 'com.codeborne', name: 'selenide', version: '5.7.0'
	
	def poiVersion = "3.10.1"
    compile "org.apache.poi:poi:${poiVersion}"
    compile "org.apache.poi:poi-ooxml:${poiVersion}"
	compile "org.apache.poi:ooxml-schemas:1.1"
	
	testCompile group: 'org.testng', name: 'testng', version: '7.1.0'
	compile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '3.141.59'
	compile group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version: '3.141.59'
	
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
	
}
test.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

test {
	dependsOn 'cleanTest'
    useTestNG() {
    	//suites "src/test/java/testSuites/${TestSuiteFile}"+".xml"
    	 suites "testng.xml"
    }
     tasks.withType(Test) {
    testLogging {
      showStandardStreams = true
       events "passed", "failed"
    }
 }
}